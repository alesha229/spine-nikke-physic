import{A as F,C as k,a as v,S as R,P as d}from"./vendor-DTAuhwW2.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))e(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&e(a)}).observe(document,{childList:!0,subtree:!0});function i(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerPolicy&&(o.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?o.credentials="include":s.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function e(s){if(s.ep)return;s.ep=!0;const o=i(s);fetch(s.href,o)}})();const w=.8,M=window.location.hostname==="localhost"?"":"/spine-nikke-physic";class A{constructor(t,i){this.spine=t,this.config=i,this.nextPlayTimes=new Map,this.currentTimes=new Map,this.playedTracks=new Set,this.trackStates=new Map,this.spine.state.data.defaultMix=this.config.crossFadeDuration,i.animations.forEach(e=>{this.nextPlayTimes.set(e.track,Date.now()+e.delay),this.currentTimes.set(e.track,0),this.trackStates.set(e.track,{isPlaying:!1,lastAnimation:""})}),this.spine.state.addListener({complete:e=>{const s=e.trackIndex,o=this.trackStates.get(s);o&&(o.isPlaying=!1)},start:()=>{},interrupt:()=>{},end:()=>{},dispose:()=>{},event:()=>{}})}update(t){this.config.animations.forEach(i=>{const e=i.track,s=this.trackStates.get(e);if(i.loop){if(!this.playedTracks.has(e)){const o=this.spine.state.setAnimation(e,i.name,i.loop);i.weight!==void 0&&(o.alpha=i.weight),i.timeScale!==void 0&&(o.timeScale=i.timeScale),this.playedTracks.add(e),s&&(s.isPlaying=!0,s.lastAnimation=i.name)}}else{const o=t>=this.nextPlayTimes.get(e),a=!s?.isPlaying;if(o&&a){const r=this.spine.state.setAnimation(e,i.name,i.loop);i.weight!==void 0&&(r.alpha=i.weight),i.timeScale!==void 0&&(r.timeScale=i.timeScale),this.nextPlayTimes.set(e,t+i.delay),s&&(s.isPlaying=!0,s.lastAnimation=i.name)}}})}updateConfig(t){this.config={...this.config,...t},this.spine.state.data.defaultMix=this.config.crossFadeDuration}updateAnimation(t,i){const e=this.config.animations.findIndex(s=>s.track===t);e!==-1&&(this.config.animations[e]={...this.config.animations[e],...i})}}class L{constructor(t,i,e){this.bone=t,this.settings=i,this.physicsConfig=e,this.initialLocalPosition=new d(t.x,t.y),this.currentPosition=new d(t.worldX,t.worldY),this.initialWorldPosition=new d(t.worldX,t.worldY),this.previousPosition=new d(t.worldX,t.worldY),this.velocity=new d(0,0),this.currentRotation=t.rotation,this.previousRotation=t.rotation,this.angleVelocity=0,this.isInitialized=!1,this.lastHolderPosition=new d(0,0),this.holderVelocity=new d(0,0)}initialize(t){this.isInitialized||(this.currentPosition.set(this.bone.worldX,this.bone.worldY),this.initialWorldPosition.set(this.bone.worldX,this.bone.worldY),this.previousPosition.set(this.bone.worldX,this.bone.worldY),this.currentRotation=this.bone.rotation,this.previousRotation=this.bone.rotation,this.lastHolderPosition.copyFrom(t),this.isInitialized=!0)}updateHolderVelocity(t,i){i>0&&(this.holderVelocity.set((t.x-this.lastHolderPosition.x)/i,(t.y-this.lastHolderPosition.y)/i),this.lastHolderPosition.copyFrom(t))}applyHolderInertia(t){if(this.settings.Mass>0){if(this.bone.data.name.includes("hair"))return;const i=.5/this.settings.Mass;this.velocity.x+=this.holderVelocity.x*i,this.velocity.y+=this.holderVelocity.y*i}}applyRandomForce(t=100){if(!this.settings.FixPosition&&this.settings.Mass>0&&!this.bone.data.name.includes("hair")){const i=(this.physicsConfig.FireShakeMinForce+Math.random()*(this.physicsConfig.FireShakeMaxForce-this.physicsConfig.FireShakeMinForce))*w,e=this.physicsConfig.ForceRandomAngleMin*(Math.PI/180),s=this.physicsConfig.ForceRandomAngleMax*(Math.PI/180),o=e+Math.random()*(s-e);this.velocity.x+=Math.cos(o)*i*t,this.velocity.y+=Math.sin(o)*i*t;const a=i*.02*w;this.angleVelocity+=(Math.random()-.5)*2*a}}normalizeAngle(t){return t=t%360,t>180&&(t-=360),t<-180&&(t+=360),t}applyConstraints(t){if(this.settings.StretchLimit>0&&this.bone.parent){const i=Math.sqrt(this.initialLocalPosition.x**2+this.initialLocalPosition.y**2),e=new d(this.currentPosition.x-this.bone.parent.worldX,this.currentPosition.y-this.bone.parent.worldY),s=Math.sqrt(e.x**2+e.y**2),o=i*this.settings.StretchLimit;if(s>o){const a=o/s;this.currentPosition.set(this.bone.parent.worldX+e.x*a,this.bone.parent.worldY+e.y*a);const r=new d(e.x/s,e.y/s),y=this.velocity.x*r.x+this.velocity.y*r.y;y>0&&(this.velocity.x-=y*r.x*1.5,this.velocity.y-=y*r.y*1.5)}}if(this.settings.AngleLimit<180&&this.bone.parent){const i=this.normalizeAngle(this.currentRotation-this.bone.parent.rotation),e=this.settings.AngleLimit;if(Math.abs(i)>e){const s=Math.sign(i)*e;this.currentRotation=this.bone.parent.rotation+s,this.angleVelocity*=.2}}}applyToBone(){const t=this.currentPosition.x-this.initialWorldPosition.x,i=this.currentPosition.y-this.initialWorldPosition.y;this.bone.x=this.initialLocalPosition.x+t,this.bone.y=this.initialLocalPosition.y+i,this.bone.rotation=this.currentRotation}update(t,i){if(this.initialize(i),this.updateHolderVelocity(i,t),this.settings.FixPosition){this.currentPosition.set(this.bone.worldX,this.bone.worldY),this.currentRotation=this.bone.rotation,this.velocity.set(0,0),this.angleVelocity=0;return}this.applyHolderInertia(t),this.previousPosition.copyFrom(this.currentPosition),this.previousRotation=this.currentRotation;const e=this.bone.worldX,s=this.bone.worldY,o=this.bone.rotation,a=(e-this.currentPosition.x)*this.settings.Shiftiness,r=(s-this.currentPosition.y)*this.settings.Shiftiness,y=-this.velocity.x*this.settings.Damping,f=-this.velocity.y*this.settings.Damping,x=(o-this.currentRotation)*this.settings.SupportSpringShiftiness,P=-this.angleVelocity*this.settings.SupportSpringDamping;let m=(a+y)*this.settings.ForceMultiplier*w,u=(r+f)*this.settings.ForceMultiplier*w,l=(x+P)*this.settings.ForceMultiplier*w;const p=3e3;m=Math.max(-p,Math.min(p,m)),u=Math.max(-p,Math.min(p,u)),l=Math.max(-p,Math.min(p,l)),this.velocity.x+=m/this.settings.Mass*t,this.velocity.y+=u/this.settings.Mass*t,this.angleVelocity+=l/this.settings.Mass*t;const g=5e3,n=Math.sqrt(this.velocity.x*this.velocity.x+this.velocity.y*this.velocity.y);n>g&&(this.velocity.x=this.velocity.x/n*g,this.velocity.y=this.velocity.y/n*g),this.currentPosition.x+=this.velocity.x*t,this.currentPosition.y+=this.velocity.y*t,this.currentRotation+=this.angleVelocity*t,this.currentRotation=this.normalizeAngle(this.currentRotation),this.applyConstraints(t),this.velocity.set((this.currentPosition.x-this.previousPosition.x)/t,(this.currentPosition.y-this.previousPosition.y)/t),this.angleVelocity=(this.currentRotation-this.previousRotation)/t;const c=.1;Math.abs(this.velocity.x)<c&&(this.velocity.x=0),Math.abs(this.velocity.y)<c&&(this.velocity.y=0),Math.abs(this.angleVelocity)<c&&(this.angleVelocity=0),this.applyToBone()}}async function C(){const h=new F({width:window.innerWidth,height:window.innerHeight,backgroundColor:0,backgroundAlpha:0,antialias:!0,resolution:window.devicePixelRatio||1,autoDensity:!0,resizeTo:window});document.body.appendChild(h.view);let t=new k;t.x=h.screen.width/2,t.y=h.screen.height/2,v.add({alias:"spineboy-data",src:M+"/c850_aim_00.skel"}),v.setPreferences({preferCreateImageBitmap:!1});let i;try{i=await v.load("spineboy-data")}catch(n){console.error("Failed to load Spine data:",n);return}const e=i.spineData,s=new R(e);s.x=0,s.y=400,s.scale.set(.5),t.addChild(s),h.stage.addChild(t),t.eventMode="static",t.cursor="pointer";let o=!1,a=null,r=null;t.on("pointerdown",n=>{o=!0,a=n.data,r=n.data.getLocalPosition(t.parent),t.alpha=.95}),t.on("pointerup",()=>{o=!1,a=null,t.alpha=1}),t.on("pointermove",n=>{if(o){const c=a.getLocalPosition(t.parent);t.x+=c.x-r.x,t.y+=c.y-r.y,r=c}});const y=await fetch(M+"/aim-physics.json").then(n=>n.json()),f=[],x=Object.keys(y.BoneSpringPhysicsSettingCollection);for(const n of s.skeleton.bones)if(x.includes(n.data.name)){const c=y.BoneSpringPhysicsSettingCollection[n.data.name];f.push(new L(n,c,y)),console.log(`Bone "${n.data.name}" added to physics.`)}const P={animations:[{name:"aim_idle",track:1,delay:200,loop:!0,weight:1}],crossFadeDuration:0},m=new A(s,P),u=new d(t.x,t.y);let l=null;const p=100;function g(){f.forEach(c=>{c.applyRandomForce()});const n=s.state.setAnimation(2,"aim_fire",!1);n.alpha=1,n.timeScale=.4,n.listener={complete:()=>{s.state.setEmptyAnimation(2,.1)}}}document.addEventListener("mousedown",()=>{g(),l=setInterval(g,p)}),document.addEventListener("mouseup",()=>{l&&(clearInterval(l),l=null)}),document.addEventListener("mouseleave",()=>{l&&(clearInterval(l),l=null)}),h.ticker.add(n=>{const c=h.ticker.deltaMS/1e3,S=Date.now();u.set(t.x,t.y),s.update(c),m.update(S);for(const b of f)b.update(c,u);s.updateTransform()}),window.addEventListener("resize",()=>{t.x=h.screen.width/2,t.y=h.screen.height/2})}C();

import{P as b,G as R,C as Y,T as U,a as F,A as k,S as O,b as W}from"./vendor-BjuThNz9.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const o of n)if(o.type==="childList")for(const s of o.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function t(n){const o={};return n.integrity&&(o.integrity=n.integrity),n.referrerPolicy&&(o.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?o.credentials="include":n.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(n){if(n.ep)return;n.ep=!0;const o=t(n);fetch(n.href,o)}})();class V{constructor(e,t,i,n,o,s,a,r,h){this.app=e,this.holder=s,this.focusMarker=null,this.spineboy=t,this.physicsBones=i,this.animationMixController=n,this.globalSettings=o,this.uiContainer=null,this.isUIVisible=!0,this.availableModels=a,this.currentModel=r,this.onModelChange=h,this.soundEnabled=!0,this.initUI()}initUI(){this.uiContainer=document.createElement("div"),this.uiContainer.style.position="fixed",this.uiContainer.style.top="10px",this.uiContainer.style.left="10px",this.uiContainer.style.backgroundColor="rgba(0, 0, 0, 0.7)",this.uiContainer.style.color="white",this.uiContainer.style.padding="15px",this.uiContainer.style.borderRadius="5px",this.uiContainer.style.fontFamily="Arial, sans-serif",this.uiContainer.style.zIndex="1000",this.uiContainer.style.maxWidth="300px",document.body.appendChild(this.uiContainer);const e=document.createElement("h3");e.textContent="Spine Physics Settings",e.style.marginTop="0",this.uiContainer.appendChild(e);const t=document.createElement("button");t.textContent="Hide UI",t.style.marginBottom="10px",t.onclick=()=>this.toggleUI(),this.uiContainer.appendChild(t),this.createModelSelector(),this.createGlobalControls(),this.createAnimationControls()}createModelSelector(){console.log("[UI] Creating model selector");const e=document.createElement("h4");e.textContent="Model Selection",this.uiContainer.appendChild(e);const t=document.createElement("select");t.style.width="100%",t.style.marginBottom="10px",this.availableModels.forEach(i=>{const n=document.createElement("option");n.value=i,n.textContent=i,i===this.currentModel&&(n.selected=!0),t.appendChild(n)}),t.addEventListener("change",()=>{const i=t.value;console.log(`[UI] Model selection changed to ${i}`),i!==this.currentModel?(this.currentModel=i,console.log(`[UI] Calling onModelChange with ${i}`),this.onModelChange(i)):console.log(`[UI] Model selection didn't change (still ${i})`)}),this.uiContainer.appendChild(t),console.log("[UI] Model selector created")}createGlobalControls(){const e=document.createElement("h4");e.textContent="Global Settings",this.uiContainer.appendChild(e),this.createSlider("Scale",.1,2,.1,this.spineboy.scale.x,t=>{this.spineboy&&this.spineboy.scale.set(t)}),this.createSlider("Max Force",100,2e4,100,this.globalSettings.maxForce,t=>{this.globalSettings.maxForce=t}),this.createSlider("Max Speed",100,2e4,100,this.globalSettings.maxSpeed,t=>{this.globalSettings.maxSpeed=t}),this.createSlider("Physics Strength",.05,1.5,.05,this.globalSettings.physicsStrengthMultiplier,t=>{this.globalSettings.physicsStrengthMultiplier=t}),this.createCheckbox("No sound",!this.soundEnabled,t=>{this.soundEnabled=!t})}createCheckbox(e,t,i,n){n||(n=this.uiContainer);const o=document.createElement("div");o.style.marginBottom="10px";const s=document.createElement("input");s.type="checkbox",s.checked=t,s.id=`cb-${e.replace(/\s+/g,"-")}`;const a=document.createElement("label");a.htmlFor=s.id,a.textContent=e,a.style.marginLeft="6px",s.addEventListener("change",()=>i(s.checked)),o.appendChild(s),o.appendChild(a),n.appendChild(o)}createAnimationControls(){console.log("[UI] Creating animation controls"),console.log("[UI] spineboy exists:",this.spineboy?"yes":"no"),console.log("[UI] spineboy.spineData exists:",this.spineboy&&this.spineboy.spineData?"yes":"no");const e=document.createElement("h4");if(e.textContent="Animation Controls",this.uiContainer.appendChild(e),!this.spineboy||!this.spineboy.spineData){console.warn("[UI] Spineboy or spineData is null, skipping animation controls");return}const t=this.spineboy.spineData.animations.map(o=>o.name);console.log("[UI] Available animations:",t);const i=document.createElement("label");i.textContent="Select Animation: ",i.style.display="block",i.style.marginTop="10px",this.uiContainer.appendChild(i);const n=document.createElement("select");if(n.style.width="100%",n.style.marginBottom="10px",t.forEach(o=>{const s=document.createElement("option");s.value=o,s.textContent=o,n.appendChild(s)}),this.animationMixController&&this.animationMixController.config.animations.length>0&&(n.value=this.animationMixController.config.animations[0].name),n.addEventListener("change",()=>{this.animationMixController&&this.animationMixController.updateAnimation(6,{name:n.value})}),this.uiContainer.appendChild(n),this.animationMixController&&this.animationMixController.config.animations.length>0){const o=this.animationMixController.config.animations[0].weight||1;this.createSlider("Animation Weight",0,1,.1,o,s=>{if(this.animationMixController&&this.animationMixController.updateAnimation(6,{weight:s}),this.spineboy){const a=this.spineboy.state.getCurrent(1);a&&(a.alpha=s)}})}if(this.animationMixController&&this.animationMixController.config.animations.length>0){const o=this.animationMixController.config.animations[0].timeScale||1;this.createSlider("Animation Speed",.1,2,.1,o,s=>{if(this.animationMixController&&this.animationMixController.updateAnimation(6,{timeScale:s}),this.spineboy){const a=this.spineboy.state.getCurrent(1);a&&(a.timeScale=s)}})}console.log("[UI] Animation controls created")}createSlider(e,t,i,n,o,s,a=null){a||(a=this.uiContainer);const r=document.createElement("div");r.style.marginBottom="10px",r.className="slider-container";const h=document.createElement("label");h.textContent=`${e}: ${o}`,h.style.display="block",h.style.marginBottom="5px";const d=document.createElement("input");d.type="range",d.min=t,d.max=i,d.step=n,d.value=o,d.style.width="100%",d.addEventListener("input",()=>{const f=parseFloat(d.value);h.textContent=`${e}: ${f.toFixed(2)}`,s(f)}),r.appendChild(h),r.appendChild(d),a.appendChild(r)}toggleUI(){this.isUIVisible=!this.isUIVisible,this.uiContainer.style.display=this.isUIVisible?"block":"none";const e=this.uiContainer.querySelector("button");e.textContent=this.isUIVisible?"Hide UI":"Show UI"}updateModel(e,t,i){console.log("[UI] updateModel called"),console.log("[UI] newSpineboy:",e?"exists":"null"),console.log("[UI] newPhysicsBones length:",t?t.length:"null"),console.log("[UI] newAnimationMixController:",i?"exists":"null"),this.spineboy=e,this.physicsBones=t,this.animationMixController=i;const n=this.uiContainer.querySelector("select");n?(n.value=this.currentModel,console.log(`[UI] Model select updated to ${this.currentModel}`)):console.error("[UI] Model select not found"),console.log("[UI] Recreating animation controls"),this.recreateAnimationControls(),console.log("[UI] Model references updated")}recreateAnimationControls(){console.log("[UI] recreateAnimationControls called");const e=Array.from(this.uiContainer.children).find(t=>t.textContent&&t.textContent.includes("Animation Controls"));if(e){console.log("[UI] Found existing animation controls section, removing it");let t=e.nextElementSibling;for(;t&&!t.textContent.includes("Model Selection")&&!t.textContent.includes("Global Settings");){const i=t;t=t.nextElementSibling,i.remove()}e.remove(),console.log("[UI] Animation controls section removed")}else console.log("[UI] Animation controls section not found");console.log("[UI] Creating new animation controls"),this.createAnimationControls()}destroy(){this.uiContainer&&this.uiContainer.parentNode&&this.uiContainer.parentNode.removeChild(this.uiContainer),this.removeFocusMarker()}}class ${constructor(e,t){this.currentIdleName="aim_idle",this.spine=e,this.config=t,this.nextPlayTimes=new Map,this.currentTimes=new Map,this.playedTracks=new Set,this.trackStates=new Map,this.spine.state.data.defaultMix=this.config.crossFadeDuration,t.animations.forEach(i=>{this.nextPlayTimes.set(i.track,Date.now()+i.delay),this.currentTimes.set(i.track,0),this.trackStates.set(i.track,{isPlaying:!1,lastAnimation:""})}),this.spine.state.addListener({complete:i=>{const n=i.trackIndex,o=this.trackStates.get(n);o&&(o.isPlaying=!1)},start:()=>{},interrupt:()=>{},end:()=>{},dispose:()=>{},event:()=>{}})}update(e){this.config.animations.forEach(t=>{const i=t.track,n=this.trackStates.get(i);if(t.loop){if(!this.playedTracks.has(i)){const o=this.spine.state.setAnimation(i,t.name,t.loop);t.weight!==void 0&&(o.alpha=t.weight),t.timeScale!==void 0&&(o.timeScale=t.timeScale),this.playedTracks.add(i),n&&(n.isPlaying=!0,n.lastAnimation=t.name)}}else{const o=e>=this.nextPlayTimes.get(i),s=!n?.isPlaying;if(o&&s){const a=this.spine.state.setAnimation(i,t.name,t.loop);t.weight!==void 0&&(a.alpha=t.weight),t.timeScale!==void 0&&(a.timeScale=t.timeScale),this.nextPlayTimes.set(i,e+t.delay),n&&(n.isPlaying=!0,n.lastAnimation=t.name)}}})}updateConfig(e){this.config={...this.config,...e},this.spine.state.data.defaultMix=this.config.crossFadeDuration}updateAnimation(e,t){const i=this.config.animations.findIndex(n=>n.track===e);i!==-1&&(this.config.animations[i]={...this.config.animations[i],...t},this.applyAnimationChanges(e))}applyAnimationChanges(e){const t=this.config.animations.find(n=>n.track===e);if(!t)return;const i=this.spine.state.getCurrent(e);if(i)if(i.animation?.name!==t.name){const n=this.spine.state.setAnimation(e,t.name,t.loop);t.weight!==void 0&&(n.alpha=t.weight),t.timeScale!==void 0&&(n.timeScale=t.timeScale)}else t.weight!==void 0&&(i.alpha=t.weight),t.timeScale!==void 0&&(i.timeScale=t.timeScale)}}class z{constructor(e,t,i,n){this.pureAnimationLocalX=0,this.pureAnimationLocalY=0,this.pureAnimationLocalRotation=0,this.pureAnimationLocalScaleX=1,this.pureAnimationLocalScaleY=1,this.pureWorldX=0,this.pureWorldY=0,this.pureWorldRotation=0,this.pureBoneLength=0,this.warmupTime=0,this.warmupDuration=.5,this.isWarmedUp=!1,this.frameCount=0,this.isHipBone=!1,this.isAtBone=!1,this.bone=e,this.settings=t,this.physicsConfig=i,this.globalSettings=n;const o=e.data?.name||"";this.isHipBone=o.includes("#")||!o,this.isAtBone=o.includes("@"),this.isHipBone?(this.pureAnimationLocalX=e.data.x,this.pureAnimationLocalY=e.data.y,this.pureAnimationLocalRotation=e.data.rotation,this.pureAnimationLocalScaleX=e.data.scaleX,this.pureAnimationLocalScaleY=e.data.scaleY):(this.pureAnimationLocalX=e.x,this.pureAnimationLocalY=e.y,this.pureAnimationLocalRotation=e.rotation,this.pureAnimationLocalScaleX=e.scaleX,this.pureAnimationLocalScaleY=e.scaleY),this.initialLocalPosition=new b(e.x,e.y),this.currentPosition=new b(0,0),this.previousPosition=new b(0,0),this.restPosition=new b(0,0),this.velocity=new b(0,0),this.currentRotation=0,this.previousRotation=0,this.restRotation=0,this.angleVelocity=0,this.isInitialized=!1,this.lastHolderPosition=new b(0,0),this.holderVelocity=new b(0,0),this.computePureBoneLength(),this.originalBoneLength=this.pureBoneLength}computePureBoneLength(){if(!this.bone.parent)this.pureBoneLength=Math.sqrt(this.pureAnimationLocalX*this.pureAnimationLocalX+this.pureAnimationLocalY*this.pureAnimationLocalY);else{let e=0,t=0;this.bone.parent.physics?(e=this.bone.parent.physics.pureAnimationLocalX,t=this.bone.parent.physics.pureAnimationLocalY):(e=this.bone.parent.x,t=this.bone.parent.y);const i=this.pureAnimationLocalX-e,n=this.pureAnimationLocalY-t;this.pureBoneLength=Math.sqrt(i*i+n*n)}this.pureBoneLength<1&&(this.pureBoneLength=1)}computePureWorldTransform(){if(this.computePureBoneLength(),!this.bone.parent){this.pureWorldX=this.pureAnimationLocalX,this.pureWorldY=this.pureAnimationLocalY,this.pureWorldRotation=this.pureAnimationLocalRotation;return}if(this.isAtBone){const s=this.bone.parent.worldX,a=this.bone.parent.worldY,r=this.bone.parent.rotation,h=this.pureAnimationLocalX-this.initialLocalPosition.x,d=this.pureAnimationLocalY-this.initialLocalPosition.y,f=Math.cos(r),x=Math.sin(r);this.pureWorldX=s+(h*f-d*x),this.pureWorldY=a+(h*x+d*f),this.pureWorldRotation=r+this.pureAnimationLocalRotation;return}let e=0,t=0,i=0;this.bone.parent.physics?(e=this.bone.parent.physics.pureWorldX,t=this.bone.parent.physics.pureWorldY,i=this.bone.parent.physics.pureWorldRotation):(e=this.bone.parent.worldX,t=this.bone.parent.worldY,i=this.bone.parent.rotation);const n=Math.cos(i),o=Math.sin(i);this.pureWorldX=e+(this.pureAnimationLocalX*n-this.pureAnimationLocalY*o),this.pureWorldY=t+(this.pureAnimationLocalX*o+this.pureAnimationLocalY*n),this.pureWorldRotation=i+this.pureAnimationLocalRotation}get pureAnimationWorldX(){return this.pureWorldX}get pureAnimationWorldY(){return this.pureWorldY}get pureAnimationWorldRotation(){return this.pureWorldRotation}initialize(e){this.isInitialized||(this.computePureWorldTransform(),this.currentPosition.set(this.pureAnimationWorldX,this.pureAnimationWorldY),this.previousPosition.set(this.pureAnimationWorldX,this.pureAnimationWorldY),this.restPosition.set(this.pureAnimationWorldX,this.pureAnimationWorldY),this.currentRotation=this.pureAnimationWorldRotation,this.previousRotation=this.pureAnimationWorldRotation,this.restRotation=this.pureAnimationWorldRotation,this.originalBoneLength=this.pureBoneLength,this.velocity.set(0,0),this.angleVelocity=0,this.lastHolderPosition.copyFrom(e),this.holderVelocity.set(0,0),this.isInitialized=!0,this.warmupTime=0,this.frameCount=0)}shouldApplyPhysics(e){if(this.frameCount++,this.warmupTime+=e,this.frameCount<5)return!1;const t=Math.sqrt((this.pureAnimationWorldX-this.previousPosition.x)**2+(this.pureAnimationWorldY-this.previousPosition.y)**2),i=Math.abs(this.pureAnimationWorldRotation-this.previousRotation);return t>.5||i>.01?(this.isWarmedUp=!0,!0):Math.sqrt((this.pureAnimationWorldX-this.restPosition.x)**2+(this.pureAnimationWorldY-this.restPosition.y)**2)>2?(this.isWarmedUp=!0,!0):this.warmupTime>=this.warmupDuration?(this.isWarmedUp=!0,!0):!1}getForceMultiplier(){if(!this.isWarmedUp)return 0;const e=.5,t=Math.max(0,this.warmupTime-this.warmupDuration);return t<e?t/e*this.settings.ForceMultiplier:this.settings.ForceMultiplier}updateHolderVelocity(e,t){t>0&&(this.holderVelocity.set((e.x-this.lastHolderPosition.x)/t,(e.y-this.lastHolderPosition.y)/t),this.lastHolderPosition.copyFrom(e))}applyHolderInertia(e){if(this.settings.Mass>0){const t=.5/this.settings.Mass;this.velocity.x+=this.holderVelocity.x*t,this.velocity.y+=this.holderVelocity.y*t}}applyRandomForce(e=1e3){if(!this.settings.FixPosition&&this.settings.Mass>0&&this.isWarmedUp){const t=(this.physicsConfig.FireShakeMinForce+Math.random()*(this.physicsConfig.FireShakeMaxForce-this.physicsConfig.FireShakeMinForce))*this.globalSettings.physicsStrengthMultiplier,i=this.physicsConfig.ForceRandomAngleMin*(Math.PI/180),n=this.physicsConfig.ForceRandomAngleMax*(Math.PI/180),o=i+Math.random()*(n-i);this.velocity.x+=Math.cos(o)*t*e*10,this.velocity.y+=Math.sin(o)*t*e*10;const s=t*.02*this.globalSettings.physicsStrengthMultiplier;this.angleVelocity+=(Math.random()-.5)*2*s}}normalizeAngle(e){for(;e>Math.PI;)e-=2*Math.PI;for(;e<-Math.PI;)e+=2*Math.PI;return e}applyToBone(){if(this.bone.parent){let e=0,t=0,i=0;this.isAtBone?(e=this.bone.parent.worldX,t=this.bone.parent.worldY,i=this.bone.parent.rotation):this.bone.parent.physics?(e=this.bone.parent.physics.pureWorldX,t=this.bone.parent.physics.pureWorldY,i=this.bone.parent.physics.pureWorldRotation):(e=this.bone.parent.worldX,t=this.bone.parent.worldY,i=this.bone.parent.rotation);const n=this.currentPosition.x-e,o=this.currentPosition.y-t,s=Math.cos(-i),a=Math.sin(-i),r=n*s-o*a,h=n*a+o*s;this.isAtBone?(this.bone.x=this.initialLocalPosition.x+r*.4,this.bone.y=this.initialLocalPosition.y+h*.4):(this.bone.x=this.pureAnimationLocalX+r*(this.globalSettings.physicsStrengthMultiplier/2),this.bone.y=this.pureAnimationLocalY+h*(this.globalSettings.physicsStrengthMultiplier/2)),this.frameCount%60===0&&(this.bone.data?.name,this.isHipBone||this.isAtBone)}else this.bone.x=this.initialLocalPosition.x+(this.currentPosition.x-this.pureAnimationWorldX),this.bone.y=this.initialLocalPosition.y+(this.currentPosition.y-this.pureAnimationWorldY)}applyConstraints(){if(!this.bone.parent)return;let e=0,t=0,i=0;this.isAtBone?(e=this.bone.parent.worldX,t=this.bone.parent.worldY,i=this.bone.parent.rotation):this.bone.parent.physics?(e=this.bone.parent.physics.pureWorldX,t=this.bone.parent.physics.pureWorldY,i=this.bone.parent.physics.pureWorldRotation):(e=this.bone.parent.worldX,t=this.bone.parent.worldY,i=this.bone.parent.rotation);const n=new b(this.currentPosition.x-e,this.currentPosition.y-t),o=Math.sqrt(n.x*n.x+n.y*n.y),s=this.pureBoneLength*this.settings.StretchLimit;if(o>s&&o>.001){const a=s/o;this.currentPosition.set(e+n.x*a,t+n.y*a);const r=new b(n.x/o,n.y/o),h=this.velocity.x*r.x+this.velocity.y*r.y;h>0&&(this.velocity.x-=h*r.x*.8,this.velocity.y-=h*r.y*.8)}if(this.settings.AngleLimit<180){const a=this.normalizeAngle(this.currentRotation-i),r=this.settings.AngleLimit*(Math.PI/180);if(Math.abs(a)>r){const h=Math.sign(a)*r,d=this.currentRotation;this.currentRotation=i+h;const f=this.currentRotation-d;this.angleVelocity+=f/.016*.5}}if(this.settings.FixSpringLength&&o>.001){const a=this.pureBoneLength/o;this.currentPosition.set(e+n.x*a,t+n.y*a)}}update(e,t){if(e===0)return;if(this.initialize(t),!this.shouldApplyPhysics(e)){this.currentPosition.set(this.pureAnimationWorldX,this.pureAnimationWorldY),this.currentRotation=this.pureAnimationWorldRotation,this.restPosition.set(this.pureAnimationWorldX,this.pureAnimationWorldY),this.restRotation=this.pureAnimationWorldRotation,this.velocity.set(0,0),this.angleVelocity=0,this.previousPosition.copyFrom(this.currentPosition),this.previousRotation=this.currentRotation;return}if(this.updateHolderVelocity(t,e),this.settings.FixPosition){this.currentPosition.set(this.pureAnimationWorldX,this.pureAnimationWorldY),this.currentRotation=this.pureAnimationWorldRotation,this.velocity.set(0,0),this.angleVelocity=0;return}this.applyHolderInertia(e),this.previousPosition.copyFrom(this.currentPosition),this.previousRotation=this.currentRotation;const i=this.pureAnimationWorldX,n=this.pureAnimationWorldY,o=this.pureAnimationWorldRotation,s=(i-this.currentPosition.x)*this.settings.Shiftiness,a=(n-this.currentPosition.y)*this.settings.Shiftiness,r=-this.velocity.x*this.settings.Damping,h=-this.velocity.y*this.settings.Damping,d=(o-this.currentRotation)*this.settings.SupportSpringShiftiness,f=-this.angleVelocity*this.settings.SupportSpringDamping,x=this.globalSettings.physicsStrengthMultiplier;let A=(s+r)*x*this.globalSettings.physicsStrengthMultiplier,v=(a+h)*x*this.globalSettings.physicsStrengthMultiplier,w=(d+f)*x*this.globalSettings.physicsStrengthMultiplier;const l=this.globalSettings.maxForce||1e4;A=Math.max(-l,Math.min(l,A)),v=Math.max(-l,Math.min(l,v)),w=Math.max(-l,Math.min(l,w)),this.velocity.x+=A/this.settings.Mass*e,this.velocity.y+=v/this.settings.Mass*e,this.angleVelocity+=w/this.settings.Mass*e;const c=this.globalSettings.maxSpeed||1e3,y=Math.sqrt(this.velocity.x*this.velocity.x+this.velocity.y*this.velocity.y);y>c&&(this.velocity.x=this.velocity.x/y*c,this.velocity.y=this.velocity.y/y*c),this.currentPosition.x+=this.velocity.x*e,this.currentPosition.y+=this.velocity.y*e,this.currentRotation+=this.angleVelocity*e,this.currentRotation=this.normalizeAngle(this.currentRotation),this.applyConstraints(),this.velocity.set((this.currentPosition.x-this.previousPosition.x)/e,(this.currentPosition.y-this.previousPosition.y)/e),this.angleVelocity=(this.currentRotation-this.previousRotation)/e;const g=.1;Math.abs(this.velocity.x)<g&&(this.velocity.x=0),Math.abs(this.velocity.y)<g&&(this.velocity.y=0),Math.abs(this.angleVelocity)<g&&(this.angleVelocity=0),this.applyToBone()}resetPhysics(){this.warmupTime=0,this.frameCount=0,this.isWarmedUp=!1,this.isInitialized=!1,this.velocity.set(0,0),this.angleVelocity=0}forceActivatePhysics(){this.isWarmedUp=!0,this.warmupTime=this.warmupDuration+1,this.frameCount=10}get isPhysicsActive(){return this.isWarmedUp}get currentBoneLength(){if(this.bone.parent){let e=0,t=0;this.bone.parent.physics?(e=this.bone.parent.physics.currentPosition.x,t=this.bone.parent.physics.currentPosition.y):(e=this.bone.parent.worldX,t=this.bone.parent.worldY);const i=this.currentPosition.x-e,n=this.currentPosition.y-t;return Math.sqrt(i*i+n*n)}return 0}get initialBoneLength(){return this.pureBoneLength}getDebugInfo(){const e=this.bone.data?.name||"unnamed",t=this.isHipBone?"#":this.isAtBone?"@":"unnamed";return{boneName:e,boneType:t,isInitialized:this.isInitialized,isWarmedUp:this.isWarmedUp,frameCount:this.frameCount,warmupTime:this.warmupTime,originalBoneLength:this.originalBoneLength,currentBoneLength:this.currentBoneLength,stretchLimit:this.settings.StretchLimit,maxAllowedLength:this.originalBoneLength*this.settings.StretchLimit,currentPosition:{x:this.currentPosition.x,y:this.currentPosition.y},velocity:{x:this.velocity.x,y:this.velocity.y},pureAnimationPosition:{x:this.pureAnimationWorldX,y:this.pureAnimationWorldY},boneLocalPosition:{x:this.bone.x,y:this.bone.y},settings:this.settings}}}class H{constructor(e,t){this.boneMap=new Map,this.textStyles=new Map,this.visible=!0,this.debugMode=!1,this.spineObject=null,this.textPool=[],this.usedTexts=[],this.screenPositionCache=new Map,this.currentFrame=0,this.needsUpdate=!1,this.updateScheduled=!1,this.app=e,this.spineObject=t,this.graphics=new R,this.textContainer=new Y,this.app.stage.addChild(this.graphics),this.app.stage.addChild(this.textContainer),this.graphics.eventMode="static",this.graphics.cursor="pointer",this.initTextStyles(),this.initEventListeners(),this.initTextPool(50),this.debugMode&&console.log("Оптимизированный визуализатор костей инициализирован")}initTextPool(e){for(let t=0;t<e;t++){const i=new U("",this.textStyles.get("boneName"));i.visible=!1,this.textPool.push(i),this.textContainer.addChild(i)}}getTextFromPool(){if(this.textPool.length>0){const e=this.textPool.pop();return this.usedTexts.push(e),e}return null}returnTextToPool(e){e.visible=!1,e.text="";const t=this.usedTexts.indexOf(e);t>-1&&(this.usedTexts.splice(t,1),this.textPool.push(e))}returnAllTextsToPool(){for(;this.usedTexts.length>0;)this.returnTextToPool(this.usedTexts[0])}initTextStyles(){this.textStyles.has("boneName")||this.textStyles.set("boneName",new F({fontSize:14,fill:16777215,fontWeight:"bold",stroke:0,strokeThickness:3})),this.textStyles.has("boneInfo")||this.textStyles.set("boneInfo",new F({fontSize:12,fill:13421772,stroke:0,strokeThickness:2}))}initEventListeners(){let e=null;this.graphics.on("click",t=>{e&&clearTimeout(e),e=setTimeout(()=>{this.debugMode&&(console.log("Клик по визуализатору:",t.global.x.toFixed(1),t.global.y.toFixed(1)),this.logBonePositions()),e=null},100)})}logBonePositions(){this.debugMode&&(console.log("Позиции костей (кеш):"),this.boneMap.forEach((e,t)=>{if(e.bone){const i=this.screenPositionCache.get(t);i&&console.log(`${t}: Screen(${i.x.toFixed(1)}, ${i.y.toFixed(1)}) [frame: ${i.frame}]`)}}))}getScreenCoordinates(e,t){if(t){const n=this.screenPositionCache.get(t);if(n&&n.frame===this.currentFrame)return{x:n.x,y:n.y}}let i;if(this.spineObject){const n=new b(e.worldX,e.worldY),o=this.spineObject.toGlobal(n);i={x:o.x,y:o.y}}else i={x:this.app.screen.width/2+e.worldX,y:this.app.screen.height/2-e.worldY};return t&&this.screenPositionCache.set(t,{x:i.x,y:i.y,frame:this.currentFrame}),i}toggleVisibility(){this.visible=!this.visible,this.graphics.visible=this.visible,this.textContainer.visible=this.visible,this.visible||this.clearCache(),console.log("Визуализатор костей:",this.visible?"ВКЛ":"ВЫКЛ")}addBone(e,t,i){this.boneMap.set(e,{bone:t,physics:i}),this.invalidateCache(e),this.scheduleUpdate(),this.debugMode&&console.log(`Добавлена кость ${e}`)}updateBone(e,t,i){if(!t){console.warn(`Попытка обновить несуществующую кость: ${e}`);return}this.boneMap.set(e,{bone:t,physics:i}),this.invalidateCache(e),this.scheduleUpdate()}invalidateCache(e){e?this.screenPositionCache.delete(e):this.screenPositionCache.clear()}clearCache(){this.screenPositionCache.clear()}scheduleUpdate(){this.needsUpdate=!0,this.updateScheduled||(this.updateScheduled=!0,requestAnimationFrame(()=>{this.needsUpdate&&this.performUpdate(),this.updateScheduled=!1,this.needsUpdate=!1}))}update(){this.scheduleUpdate()}performUpdate(){if(!this.visible)return;if(this.currentFrame++,this.graphics.clear(),this.returnAllTextsToPool(),this.boneMap.size===0){this.debugMode&&this.drawDebugInfo();return}const e=[];this.boneMap.forEach((t,i)=>{const n=this.boneMap.get(i);if(n?.bone){const o=this.getScreenCoordinates(n.bone,i);this.isOnScreen(o.x,o.y,100)&&e.push(i)}}),e.forEach(t=>{this.drawAdvancedBone(t,43775,12),this.drawBoneDirection(t,65535,30)}),this.drawConnection("#hip_l","#hip_l2",16776960,4)}drawAdvancedBone(e,t,i){const n=this.boneMap.get(e);if(!n?.bone)return;const{bone:o,physics:s}=n,a=this.getScreenCoordinates(o,e),r=a.x,h=a.y;this.isOnScreen(r,h,100)&&(this.graphics.beginFill(t,1),this.graphics.drawCircle(r,h,i),this.graphics.endFill(),this.graphics.lineStyle(2,0,1),this.graphics.beginFill(0,0),this.graphics.drawCircle(r,h,i),this.graphics.endFill(),this.graphics.lineStyle(0),this.drawBoneText(e,r,h,s),s?.velocity&&s&&(Math.abs(s.velocity.x)>.1||Math.abs(s.velocity.y)>.1)&&this.drawVelocityVector(r,h,s.velocity,43775))}isOnScreen(e,t,i=100){return e>=-i&&e<=this.app.screen.width+i&&t>=-i&&t<=this.app.screen.height+i}drawBoneText(e,t,i,n){const o=this.getTextFromPool();if(o&&(o.text=e,o.style=this.textStyles.get("boneName"),o.anchor.set(.5,1),o.x=t,o.y=i-15,o.visible=!0),n&&n.velocity){const s=this.getTextFromPool();if(s){const a=Math.sqrt(n.velocity.x*n.velocity.x+n.velocity.y*n.velocity.y).toFixed(1),r=(n.currentRotation||0).toFixed(2);s.text=`V: ${a}
R: ${r}`,s.style=this.textStyles.get("boneInfo"),s.anchor.set(.5,0),s.x=t,s.y=i+20,s.visible=!0}}}drawBoneDirection(e,t,i){const n=this.boneMap.get(e);if(!n?.bone)return;const{bone:o}=n,s=this.getScreenCoordinates(o,e),a=s.x,r=s.y;if(!this.isOnScreen(a,r,100))return;const h=o.rotation||0,d=a+Math.cos(h)*i,f=r+Math.sin(h)*i;this.graphics.lineStyle(3,t,.8),this.graphics.moveTo(a,r),this.graphics.lineTo(d,f),this.drawArrowHead(d,f,h,t),this.graphics.lineStyle(0)}drawArrowHead(e,t,i,n){this.graphics.lineStyle(2,n,.8),this.graphics.moveTo(e,t),this.graphics.lineTo(e-Math.cos(i-Math.PI/6)*10,t-Math.sin(i-Math.PI/6)*10),this.graphics.moveTo(e,t),this.graphics.lineTo(e-Math.cos(i+Math.PI/6)*10,t-Math.sin(i+Math.PI/6)*10),this.graphics.lineStyle(0)}drawVelocityVector(e,t,i,n){const s=e+i.y*.3,a=t-i.x*.3;this.graphics.lineStyle(4,n,.9),this.graphics.moveTo(e,t),this.graphics.lineTo(s,a);const r=Math.atan2(-i.x,i.y);this.graphics.lineStyle(3,n,.9),this.graphics.moveTo(s,a),this.graphics.lineTo(s-Math.cos(r-Math.PI/6)*12,a-Math.sin(r-Math.PI/6)*12),this.graphics.moveTo(s,a),this.graphics.lineTo(s-Math.cos(r+Math.PI/6)*12,a-Math.sin(r+Math.PI/6)*12),this.graphics.lineStyle(0)}drawConnection(e,t,i,n){const o=this.boneMap.get(e),s=this.boneMap.get(t);if(!o?.bone||!s?.bone)return;const a=this.getScreenCoordinates(o.bone,e),r=this.getScreenCoordinates(s.bone,t);!this.isOnScreen(a.x,a.y,200)||!this.isOnScreen(r.x,r.y,200)||(this.graphics.lineStyle(n,i,.7),this.graphics.moveTo(a.x,a.y),this.graphics.lineTo(r.x,r.y),this.graphics.lineStyle(0))}drawDebugInfo(){const e=this.app.screen.width/2,t=this.app.screen.height/2;this.graphics.beginFill(16711680,1),this.graphics.drawCircle(e,t,20),this.graphics.endFill();const i=this.getTextFromPool();i&&(i.text=`Визуализатор активен
Нет костей для отображения`,i.style=this.textStyles.get("boneName"),i.anchor.set(.5),i.x=e,i.y=t+40,i.visible=!0),this.drawCoordinateAxes()}drawCoordinateAxes(){const e=this.app.screen.width/2,t=this.app.screen.height/2;this.graphics.lineStyle(2,16711680,.5),this.graphics.moveTo(e-100,t),this.graphics.lineTo(e+100,t),this.graphics.lineStyle(2,65280,.5),this.graphics.moveTo(e,t-100),this.graphics.lineTo(e,t+100),this.graphics.lineStyle(0)}clear(){this.graphics.clear(),this.returnAllTextsToPool(),this.boneMap.clear(),this.clearCache(),this.needsUpdate=!1}destroy(){this.clear(),[...this.textPool,...this.usedTexts].forEach(e=>{e.parent&&e.parent.removeChild(e),e.destroy()}),this.textPool=[],this.usedTexts=[],this.textStyles.clear(),this.graphics.parent&&this.graphics.parent.removeChild(this.graphics),this.textContainer.parent&&this.textContainer.parent.removeChild(this.textContainer),this.graphics.destroy(),this.textContainer.destroy(),console.log("Визуализатор полностью уничтожен")}hasBone(e){return this.boneMap.has(e)}getBone(e){return this.boneMap.get(e)}setSpineObject(e){this.spineObject=e,this.clearCache()}setDebugMode(e){this.debugMode=e,console.log(`Режим отладки: ${e?"ВКЛ":"ВЫКЛ"}`)}centerSpineObject(){this.spineObject&&(this.spineObject.x=this.app.screen.width/2,this.spineObject.y=this.app.screen.height/2,this.clearCache(),console.log("Spine объект отцентрирован"))}getPerformanceStats(){return{bonesCount:this.boneMap.size,cacheSize:this.screenPositionCache.size,textPoolAvailable:this.textPool.length,textPoolInUse:this.usedTexts.length,currentFrame:this.currentFrame,needsUpdate:this.needsUpdate,updateScheduled:this.updateScheduled}}}const X={maxForce:6e3,maxSpeed:3e3,physicsStrengthMultiplier:.6},D=window.location.hostname==="localhost"?"":"/spine-nikke-physic",j=["c043","c850","c310"];let C="c850";async function _(){const m=new k({width:window.innerWidth,height:window.innerHeight,backgroundColor:0,backgroundAlpha:0,antialias:!0,resolution:window.devicePixelRatio||1,autoDensity:!0,resizeTo:window});document.body.appendChild(m.view);let e=new Y;e.x=m.screen.width/2,e.y=m.screen.height/2,m.stage.addChild(e);const t={spineboy:null,physicsBones:[],animationMixController:null,boneVisualizer:null,isLoading:!1};async function i(l){console.log(`[MODEL] Loading resources for model: ${l}`);const c=`spineboy-data-${l}`;W.cache.has(c)&&(console.log(`[MODEL] Unloading existing ${c} from cache`),W.unload(c)),W.add({alias:c,src:D+`/${l}_aim_00.skel`}),W.setPreferences({preferCreateImageBitmap:!1});let y;try{console.log(`[MODEL] Loading ${c}...`),y=await W.load(c),console.log(`[MODEL] ${c} loaded successfully`)}catch(p){return console.error(`[MODEL] Failed to load ${c}:`,p),null}console.log("[MODEL] Loading physics config...");const g=await fetch(D+`/aim-physics-${l}.json`).then(p=>(console.log("[MODEL] Physics config loaded successfully"),p.json())).catch(p=>(console.error("[MODEL] Failed to load physics config:",p),null));return g?{spineData:y.spineData,physicsConfig:g}:null}async function n(l){console.log(`[MODEL] Initializing model: ${l}`),t.isLoading=!0,t.spineboy&&(console.log("[MODEL] Removing previous spineboy"),e.removeChild(t.spineboy),t.spineboy.destroy(),t.spineboy=null),t.physicsBones=[],t.boneVisualizer&&(console.log("[MODEL] Destroying previous bone visualizer"),t.boneVisualizer.destroy(),t.boneVisualizer=null);const c=await i(l);if(!c)return console.error(`[MODEL] Failed to load resources for model ${l}`),t.isLoading=!1,!1;const{spineData:y,physicsConfig:g}=c;console.log("[MODEL] Resources loaded, creating spine object");const p=new O(y);p.y=400,p.scale.set(.5),console.log("[MODEL] Spine object created"),console.log("[MODEL] Spine bounds:",p.getBounds()),console.log("[MODEL] Spine children count:",p.children.length),p.children.length===0&&console.warn("[MODEL] Spine has no children (textures may not be loaded)"),e.addChild(p),t.spineboy=p,console.log("[MODEL] New spineboy created and added to holder"),console.log("[MODEL] Holder children count:",e.children.length),p.state.data.defaultMix=.2;try{const u=p.state.setAnimation(1,"aim_x",!0);u&&(u.timeScale=0,u.mixDuration=.2,u.alpha=.5),console.log("[MODEL] aim_x animation set")}catch(u){console.error("[MODEL] Error setting aim_x animation:",u)}try{const u=p.state.setAnimation(2,"aim_y",!0);u&&(u.timeScale=0,u.mixDuration=.2,u.alpha=.5),console.log("[MODEL] aim_y animation set")}catch(u){console.error("[MODEL] Error setting aim_y animation:",u)}const M=Object.keys(g.BoneSpringPhysicsSettingCollection);console.log(`[MODEL] Physics bone names from config: ${M.join(", ")}`);const P=p.skeleton.bones.map(u=>u.data.name);console.log(`[MODEL] All bone names in model: ${P.join(", ")}`);const E=P.filter(u=>M.includes(u));console.log(`[MODEL] Matching bones: ${E.join(", ")}`);for(const u of p.skeleton.bones){const L=u.data.name;if(M.includes(L)){const T=g.BoneSpringPhysicsSettingCollection[L],B=new z(u,T,g,X);t.physicsBones.push(B),console.log(`[MODEL] Bone "${L}" added to physics.`)}}console.log(`[MODEL] Total physics bones: ${t.physicsBones.length}`);const I={animations:[{track:6,name:"aim_idle",loop:!0,delay:0,weight:1}],crossFadeDuration:0};return t.animationMixController=new $(p,I),console.log("[MODEL] Animation mix controller created"),t.boneVisualizer=new H(m,p),console.log("[MODEL] Bone visualizer created"),t.isLoading=!1,m.renderer.render(m.stage),console.log(`[MODEL] Model ${l} initialized successfully`),!0}if(await n(C),!t.spineboy||!t.animationMixController)return;let o=.5,s=.5;function a(l,c){const y=window.innerWidth/2,g=window.innerHeight/2,p=Math.max(-1,Math.min(1,(l-y)/(y||1))),M=Math.max(-1,Math.min(1,-(c-g)/(g||1)));o=Math.max(0,Math.min(1,.5+p*.5)),s=Math.max(0,Math.min(1,.5+M*.5))}document.addEventListener("mousemove",l=>{a(l.clientX,l.clientY)}),document.addEventListener("touchmove",l=>{l.touches.length>0&&a(l.touches[0].clientX,l.touches[0].clientY)});let r=!1,h=null,d=null;e.on("pointerdown",l=>{r=!0,h=l.data,d=l.data.getLocalPosition(e.parent),e.alpha=.95}),e.on("pointerup",()=>{r=!1,h=null,e.alpha=1}),e.on("pointermove",l=>{if(r){const c=h.getLocalPosition(e.parent);e.x+=c.x-d.x,e.y+=c.y-d.y,d=c}});const f=new b(e.x,e.y);let x=null;const A=170,v=new V(m,t.spineboy,t.physicsBones,t.animationMixController,X,e,j,C,async l=>{console.log(`[UI] Request to change model from ${C} to ${l}`),C=l,await n(C)?(console.log(`[UI] Model ${C} initialized, updating UI`),v.updateModel(t.spineboy,t.physicsBones,t.animationMixController),console.log(`[UI] UI updated with new model ${C}`)):console.error(`[UI] Failed to initialize model ${C}`)});function w(){if(!t.spineboy)return;const l=t.spineboy.state.getCurrent(7);if(l&&l.animation&&l.animation.name==="aim_fire")return;const c=t.spineboy.state.setAnimation(7,"aim_fire",!1);c.alpha=1,c.timeScale=.35,t.physicsBones.forEach(y=>y.applyRandomForce()),v.soundEnabled&&new Audio(D+`/slap${Math.floor(Math.random()*2)}.wav`).play(),c.listener={complete:()=>{t.spineboy?.state.setEmptyAnimation(7,.1)},start:()=>{}}}document.addEventListener("mousedown",()=>{w(),x=setInterval(w,A)}),document.addEventListener("keydown",l=>{l.code}),document.addEventListener("mouseup",()=>{x&&(clearInterval(x),x=null)}),document.addEventListener("mouseleave",()=>{x&&(clearInterval(x),x=null)}),m.ticker.add(l=>{const c=m.ticker.deltaMS/1e3,y=Date.now();if(t.isLoading)return;if(!t.spineboy||!e.children.includes(t.spineboy)){console.warn("[TICKER] Spineboy not found in holder or is null");return}t.spineboy.update(c),t.animationMixController&&t.animationMixController.update(y);const g=t.spineboy.state.getCurrent(1),p=t.spineboy.state.getCurrent(2),M=Math.abs(o-.5)*1,P=Math.abs(s-.5)*1,E=.5+M*.5,I=.5+P*.5,u=M*P,L=M*P,T=Math.min(2,E+u),B=Math.min(2,I+L);if(g&&g.animation){const S=g.animation.duration||1;g.trackTime=o*S,g.alpha=T}if(p&&p.animation){const S=p.animation.duration||1;p.trackTime=s*S,p.alpha=B}for(const S of t.physicsBones)S.computePureWorldTransform();t.spineboy.skeleton.updateWorldTransform();for(const S of t.physicsBones)S.update(c,f);t.boneVisualizer&&t.boneVisualizer.update()}),m.ticker.speed=1,window.addEventListener("resize",()=>{e.x=m.screen.width/2,e.y=m.screen.height/2})}_();

import{A as b,C as S,a as P,S as M,P as h}from"./vendor-DTAuhwW2.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))e(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const r of o.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&e(r)}).observe(document,{childList:!0,subtree:!0});function s(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?o.credentials="include":i.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function e(i){if(i.ep)return;i.ep=!0;const o=s(i);fetch(i.href,o)}})();const v=window.location.hostname==="localhost"?"":"/spine-nikke-physic";class k{constructor(t,s){this.spine=t,this.config=s,this.nextPlayTimes=new Map,this.currentTimes=new Map,this.playedTracks=new Set,this.trackStates=new Map,this.spine.state.data.defaultMix=this.config.crossFadeDuration,s.animations.forEach(e=>{this.nextPlayTimes.set(e.track,Date.now()+e.delay),this.currentTimes.set(e.track,0),this.trackStates.set(e.track,{isPlaying:!1,lastAnimation:""})}),this.spine.state.addListener({complete:e=>{const i=e.trackIndex,o=this.trackStates.get(i);o&&(o.isPlaying=!1)},start:()=>{},interrupt:()=>{},end:()=>{},dispose:()=>{},event:()=>{}})}update(t){this.config.animations.forEach(s=>{const e=s.track,i=this.trackStates.get(e);if(s.loop){if(!this.playedTracks.has(e)){const o=this.spine.state.setAnimation(e,s.name,s.loop);s.weight!==void 0&&(o.alpha=s.weight),s.timeScale!==void 0&&(o.timeScale=s.timeScale),this.playedTracks.add(e),i&&(i.isPlaying=!0,i.lastAnimation=s.name)}}else{const o=t>=this.nextPlayTimes.get(e),r=!i?.isPlaying;if(o&&r){const c=this.spine.state.setAnimation(e,s.name,s.loop);s.weight!==void 0&&(c.alpha=s.weight),s.timeScale!==void 0&&(c.timeScale=s.timeScale),this.nextPlayTimes.set(e,t+s.delay),i&&(i.isPlaying=!0,i.lastAnimation=s.name)}}})}updateConfig(t){this.config={...this.config,...t},this.spine.state.data.defaultMix=this.config.crossFadeDuration}updateAnimation(t,s){const e=this.config.animations.findIndex(i=>i.track===t);e!==-1&&(this.config.animations[e]={...this.config.animations[e],...s})}}class F{constructor(t,s){this.bone=t,this.settings=s,this.initialLocalPosition=new h(t.x,t.y),this.currentPosition=new h(t.worldX,t.worldY),this.initialWorldPosition=new h(t.worldX,t.worldY),this.previousPosition=new h(t.worldX,t.worldY),this.velocity=new h(0,0),this.currentRotation=t.rotation,this.previousRotation=t.rotation,this.angleVelocity=0,this.isInitialized=!1,this.lastHolderPosition=new h(0,0),this.holderVelocity=new h(0,0)}initialize(t){this.isInitialized||(this.currentPosition.set(this.bone.worldX,this.bone.worldY),this.initialWorldPosition.set(this.bone.worldX,this.bone.worldY),this.previousPosition.set(this.bone.worldX,this.bone.worldY),this.currentRotation=this.bone.rotation,this.previousRotation=this.bone.rotation,this.lastHolderPosition.copyFrom(t),this.isInitialized=!0)}updateHolderVelocity(t,s){s>0&&(this.holderVelocity.set((t.x-this.lastHolderPosition.x)/s,(t.y-this.lastHolderPosition.y)/s),this.lastHolderPosition.copyFrom(t))}applyHolderInertia(t){if(this.settings.Mass>0){const s=.5/this.settings.Mass;this.velocity.x+=this.holderVelocity.x*s,this.velocity.y+=this.holderVelocity.y*s}}normalizeAngle(t){return t=t%360,t>180&&(t-=360),t<-180&&(t+=360),t}applyConstraints(t){if(this.settings.StretchLimit>0&&this.bone.parent){const s=Math.sqrt(this.initialLocalPosition.x**2+this.initialLocalPosition.y**2),e=new h(this.currentPosition.x-this.bone.parent.worldX,this.currentPosition.y-this.bone.parent.worldY),i=Math.sqrt(e.x**2+e.y**2),o=s*this.settings.StretchLimit;if(i>o){const r=o/i;this.currentPosition.set(this.bone.parent.worldX+e.x*r,this.bone.parent.worldY+e.y*r);const c=new h(e.x/i,e.y/i),d=this.velocity.x*c.x+this.velocity.y*c.y;d>0&&(this.velocity.x-=d*c.x*1.5,this.velocity.y-=d*c.y*1.5)}}if(this.settings.AngleLimit<180&&this.bone.parent){const s=this.normalizeAngle(this.currentRotation-this.bone.parent.rotation),e=this.settings.AngleLimit;if(Math.abs(s)>e){const i=Math.sign(s)*e;this.currentRotation=this.bone.parent.rotation+i,this.angleVelocity*=.2}}}applyToBone(){const t=this.currentPosition.x-this.initialWorldPosition.x,s=this.currentPosition.y-this.initialWorldPosition.y;this.bone.x=this.initialLocalPosition.x+t,this.bone.y=this.initialLocalPosition.y+s,this.bone.rotation=this.currentRotation}update(t,s){if(this.initialize(s),this.updateHolderVelocity(s,t),this.settings.FixPosition){this.currentPosition.set(this.bone.worldX,this.bone.worldY),this.currentRotation=this.bone.rotation,this.velocity.set(0,0),this.angleVelocity=0;return}this.applyHolderInertia(t),this.previousPosition.copyFrom(this.currentPosition),this.previousRotation=this.currentRotation;const e=this.bone.worldX,i=this.bone.worldY,o=this.bone.rotation,r=(e-this.currentPosition.x)*this.settings.Shiftiness,c=(i-this.currentPosition.y)*this.settings.Shiftiness,d=-this.velocity.x*this.settings.Damping,p=-this.velocity.y*this.settings.Damping,m=(o-this.currentRotation)*this.settings.SupportSpringShiftiness,w=-this.angleVelocity*this.settings.SupportSpringDamping;let u=(r+d)*this.settings.ForceMultiplier,y=(c+p)*this.settings.ForceMultiplier,n=(m+w)*this.settings.ForceMultiplier;const a=1e3;u=Math.max(-a,Math.min(a,u)),y=Math.max(-a,Math.min(a,y)),n=Math.max(-a,Math.min(a,n)),this.velocity.x+=u/this.settings.Mass*t,this.velocity.y+=y/this.settings.Mass*t,this.angleVelocity+=n/this.settings.Mass*t;const g=500,f=Math.sqrt(this.velocity.x*this.velocity.x+this.velocity.y*this.velocity.y);f>g&&(this.velocity.x=this.velocity.x/f*g,this.velocity.y=this.velocity.y/f*g),this.currentPosition.x+=this.velocity.x*t,this.currentPosition.y+=this.velocity.y*t,this.currentRotation+=this.angleVelocity*t,this.currentRotation=this.normalizeAngle(this.currentRotation),this.applyConstraints(t),this.velocity.set((this.currentPosition.x-this.previousPosition.x)/t,(this.currentPosition.y-this.previousPosition.y)/t),this.angleVelocity=(this.currentRotation-this.previousRotation)/t;const x=.1;Math.abs(this.velocity.x)<x&&(this.velocity.x=0),Math.abs(this.velocity.y)<x&&(this.velocity.y=0),Math.abs(this.angleVelocity)<x&&(this.angleVelocity=0),this.applyToBone()}}async function A(){const l=new b({width:window.innerWidth,height:window.innerHeight,backgroundColor:0,backgroundAlpha:0,antialias:!0,resolution:window.devicePixelRatio||1,autoDensity:!0,resizeTo:window});document.body.appendChild(l.view);let t=new S;t.x=l.screen.width/2,t.y=l.screen.height/2,P.add({alias:"spineboy-data",src:v+"/c850_aim_00.skel"}),P.setPreferences({preferCreateImageBitmap:!1});let s;try{s=await P.load("spineboy-data")}catch(n){console.error("Failed to load Spine data:",n);return}const e=s.spineData,i=new M(e);i.x=0,i.y=400,i.scale.set(.5),t.addChild(i),l.stage.addChild(t),t.eventMode="static",t.cursor="pointer";let o=!1,r=null,c=null;t.on("pointerdown",n=>{o=!0,r=n.data,c=n.data.getLocalPosition(t.parent),t.alpha=.95}),t.on("pointerup",()=>{o=!1,r=null,t.alpha=1}),t.on("pointermove",n=>{if(o){const a=r.getLocalPosition(t.parent);t.x+=a.x-c.x,t.y+=a.y-c.y,c=a}});const d=await fetch(v+"/aim-physics.json").then(n=>n.json()),p=[],m=Object.keys(d.BoneSpringPhysicsSettingCollection);for(const n of i.skeleton.bones)if(m.includes(n.data.name)){const a=d.BoneSpringPhysicsSettingCollection[n.data.name];p.push(new F(n,a)),console.log(`Bone "${n.data.name}" added to physics.`)}const w={animations:[{name:"aim_idle",track:1,delay:200,loop:!0,weight:1}],crossFadeDuration:0},u=new k(i,w),y=new h(t.x,t.y);document.addEventListener("click",()=>{p.forEach(a=>{});const n=i.state.setAnimation(2,"aim_fire",!1);n.alpha=1,n.timeScale=.4,n.listener={complete:()=>{i.state.setEmptyAnimation(2,.1)}}}),l.ticker.add(n=>{const a=l.ticker.deltaMS/1e3,g=Date.now();y.set(t.x,t.y),i.update(a),u.update(g);for(const f of p)f.update(a,y);i.updateTransform()}),window.addEventListener("resize",()=>{t.x=l.screen.width/2,t.y=l.screen.height/2})}A();
